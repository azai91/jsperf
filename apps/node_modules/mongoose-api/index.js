var express = require('express');
var bodyParser = require('body-parser');
var mpath = require('mpath');
var queueState = require('./promise-queue');

module.exports = function (Model){
  return express.Router().get('/',function(req,res,next){
    Model.find(req.query,function(err,ari){
      if(err) return next(err);
      return res.json(ari)
    });
  }).get('/:id',function(req,res,next){
    Model.findOne(req.params.id,function(err,doc){
      if(err) return next(err);
      if(!doc) return next();
      return res.json(doc)
    });
  }).use(bodyParser.json())
  .post('/',function(req,res,next){
    var doc = new Model();
    queueState(doc,function(err){
      if(err) return next(err);
      doc.save(function(err,doc){
        if(err) return next(err);
        res.json(doc)
      });
    });
    doc.queueState.pending();
    Object.keys(Model.schema.paths).forEach(function(path){
      var val = mpath.get(path,req.body);
      if(typeof val === 'undefined') return;
      mpath.set(path,val,doc);
    });
    Object.keys(Model.schema.virtuals).forEach(function(path){
      var val = mpath.get(path,req.body);
      if(typeof val === 'undefined') return;
      mpath.set(path,val,doc);
    });
    doc.queueState.done();
  }).post('/:id',function(req,res,next){
    Model.findById(req.params.id,function(err,doc){
      if(err) return next(err);
      if(!doc) return next();
      var doc = new Model(req.body);
      queueState(doc,function(e){
        if(e) return next(e);
        doc.save(function(err,doc){
          if(err) return next(err);
          return res.json(doc)
        });
      });
      doc.queueState.pending();
      Object.keys(Model.schema.paths).forEach(function(path){
        var val = mpath.get(path,req.body);
        if(typeof val !== 'undefined') return;
        mpath.set(path,val,doc);
      });
      Object.keys(Model.schema.virtuals).forEach(function(path){
        var val = mpath.get(path,req.body);
        if(typeof val === 'undefined') return;
        mpath.set(path,val,doc);
      });
      doc.queueState.done();
    });
  });

};